DevOps
------------------------
        Each commit must go to release.
        Cost reudction.
        Quality - REDFINED
        ==========================
==============================================
Prod - OnMobX        
Mgr - Mgrx.
=============================
Transition - 2 WEEK =====> 20 MINS.
==================================================
SDLC
----------------------------
Architect - JIRA - Confulence
Dev - 10 FEA - 10 DEV
            Code Integ - Gitlab
            Code Ana - 
                        PEER CODE REVIEW - 
                        Static Code Ana  - SonarQube
            Build - Maven - Gradle
            Unit TESTING - Junit
            Package mgmt -
                            SYSTEM
                            APP -
            Archive tool - Artifactory
            --------------------------------------
            OnMobX56.7 ----> 100 BOXES
            -------------------------------------
            50 L - 50 W
            50 N - 50 A
            25 T - 25 WL - 25 -JBs - 25 WS
            25 MY  - 25 MS - 25 OR - 25 PS
            100 PRO - 
            -------------------------------------
            1 DEP -> 9 mins.
            100 - DEP -> 9 mins?
                ---------------------
                HOW?- Parrell DEP
            -----------------------------------------
            Code -> Ansible -> Puppet- > Chef - >Salt
            GUI -> Octopus Dep - Udeploy
            -------------------------------------
            9 mins + 1 mins(100 SERVER) --- 10 MINS.
            =====================================================
            100000 INsarnce - 100 DIFF Config ---> 1 SEC.
            -----------
                Container -> Docker + Kubernetes

            AT

            Code Coverage - 
            ------------------------------
            =========================================================================
            PLAN->code->Ana->UT->Pack-Archie->Dep2QA->AT->CC
            JIRA_>GIt->SQ ->Junit>Jar->Art ->Ansible->SEL->Jacoco
            ------------------------------------------------------
                                JENKINS
                                cont - Integ
                                Auto Build
                                Auto Testing
                                Imm Feedback
            ======================================================
            ======================================================================
            Prod 
                    Dep2Prod
                    Monitoring -
                            INFRA - Zabbix
                            Log - ELK - 
                            Performance - NewRelic

https://www.devopsschool.com/path
===========================================================================================
Username: devops@rajeshkumar.xyz 
Pass: v78qbka7
============================================================================================
Onmobile-Dec-Docker-K8s-Bangalore-2019

http://bit.ly/2LCBCTF

========================================================
What is Docker?
    Container mgmt tool
    Free
    OS
    Version
            - Docker CE
            - DOCKER EE


What is Container?
    USER SPACE with their own
                        - NET NS
                        - mNT NS
                        - PMAP NS
                                    Powered by Docker

                    with a help of KERNAL NS.
 15  history
   16  clear
   17  ps -eaf | grep docker
   18  ps -eaf | grep docker | wc -l
   19  docker run -itd ubuntu
   20  docker run -itd ubuntu
   21  ps -eaf | grep docker | wc -l
   22  docker run -itd ubuntu
   23  ps -eaf | grep docker | wc -l
   24  clear
   25  ps -eaf | grep docker
   26  clear
   27  clear
   28  docker ps
   29  docker inspect 22719b53dc0e | grep -i ip
   30  docker inspect b2876a4c0ce0 | grep -i ip
   31  docker inspect 71aee8e1fa4c | grep -i ip
   32  clear
   33  ls
   34  docker ps
   35  docker exec 22719b53dc0e df -kh
   36  docker exec b2876a4c0ce0 df -kh
   37  docker exec 71aee8e1fa4c df -kh
   38  clear
   39  ls
   40  docker ps
   41  docker exec 22719b53dc0e touch /opt/rajesh.txt
   42  docker exec 22719b53dc0e ls /opt/
   43  docker exec b2876a4c0ce0 ls /opt/
   44  docker exec 71aee8e1fa4c ls /opt/
   45  clear
   46  ps -eaf
   47  clear
   48  docker ps
   49  docker exec 22719b53dc0e ps -eaf
   50  docker exec b2876a4c0ce0 ps -eaf

Docker Arch
Humen -> Docker Client --> Docker Deamon --> KERNAL
-----------------------------------------------------
                Docker Engine

Component of Docker?
    - Dokcker Engine    
            - Docker Client --> Docker Deamon
    - Docker Image
            - File system + Apps
    - Docker Container
            - What you have in image - you see in Container
    - Docker Registry and repo

=======================================
How to install Docker?
13.233.105.67
=====================
RHEL-7.5_HVM_GA-20180322-x86_64-1-Hourly2-GP2 (ami-5b673c34)

https://www.devopsschool.com/tutorial/docker/install-config/docker-install-commuityedition-centos-rhel.html

  1  sudo yum install -y yum-utils device-mapper-persistent-data lvm2
    2  sudo yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    3  sudo yum install â€“y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
    4  sudo yum-config-manager --enable rhui-REGION-rhel-server-extras
    5  sudo yum install -y docker-ce
    6  docker -v
    7  sudo systemctl enable docker
    8  sudo systemctl start docker
    9  clear
   10  which docker
   11  ps -eaf | grep docker
   12  docker info
   13  clear
   14  ls
   15  history

Q1 - Validate it - DONE


WORKING WIth Container - Docker Workflow
=================================================
create -> start -> stop -> start -> restart -> pause -> unpause -> stop -> rm

 51  history
   52  clear
   53  docker ps
   54  docker stop 22719b53dc0e b2876a4c0ce0 71aee8e1fa4c
   55  docker ps
   56  docker ps -a
   57  docker rm 22719b53dc0e b2876a4c0ce0 71aee8e1fa4c
   58  clear
   59  docker -sA
   60  clear
   61  docker ps -a
   62  docker create jenkins
   63  clear
   64  docker ps
   65  docker ps -a
   66  docker start 0b6cbacb4750
   67  docker ps a
   68  docker ps -a
   69  docker stop 0b6cbacb4750
   70  docker ps -a
   71  clear
   72  docker ps -a
   73  docker start 0b6cbacb4750
   74  docker ps a-
   75  docker ps -a
   76  docker restart 0b6cbacb4750
   77  docker ps -a
   78  clear
   79  docker pause 0b6cbacb4750
   80  docker ps -a
   81  docker unpause 0b6cbacb4750
   82  docker ps -a
   83  docker stop 0b6cbacb4750
   84  docker ps -a
   85  docker rm 0b6cbacb4750
   86  docker ps -a



Pause vs stop
-----------------
When you pause - Containers stop getting CPU from Kernal.

 89  docker create jenkins
   90  docker ps -a
   91  docker start jenkins
   92  docker start f295775d912e
   93  clear
   94  docker ps
   95  docker stats f295775d912e
   96  docker top f295775d912e
   97  ps -eaf | grep 12847
   98  clear
   99  docker ps
  100  docker exec f295775d912e ls /
  101  clear
  102  ls
  103  docker ps
  104  docker inspect f295775d912e


 105  clear
  106  history
  107  clear
  108  docker ps
  109  docker pause f295775d912e
  110  docker ps -a
  111  docker inspect f295775d912e
  112  clear
  113  docker exec f295775d912e ls /
  114  docker top f295775d912e
  115  docker stats f295775d912e
  116  docker unpause f295775d912e
  117  clear
  118  docker ps
  119  docker stop f295775d912e
  120  docker inspect f295775d912e
  121  docker exec f295775d912e ls /
  122  docker top f295775d912e
  123  clear
  124  docker stats f295775d912e
  125  history


Pull vs create
-----------------



nginx
mysql
tomcat
redis
mongodb
solr
python
----------------------
jenkins
        JAVA
            WAR
        WEB SERVER - NODE
        8080            50000
        ------------------------------
